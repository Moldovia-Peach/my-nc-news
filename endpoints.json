{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": ["author", "topic", "sort_by", "order"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6
        }
      ],
      "errors": {
        "400": "responds with an error if invalid query parameters are passed"
      }
    }
  },
  "GET /api/articles/:article_id": {
    "description": "fetches an article by its id",
    "response": {
      "status": 200,
      "body": {
        "article_id": "integer",
        "title": "string",
        "topic": "string",
        "author": "string",
        "body": "string",
        "created_at": "string",
        "votes": "integer",
        "article_img_url": "string"
      },
      "errors": {
        "400": "responds with an error if the article_id is not a valid number",
        "404": "responds with an error if no article is found with the given article_id"
      }
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves all comments for an article, sorted by most recent comment",
    "queries": [],
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 1,
          "votes": 100,
          "created_at": "2024-26-11T13:04:08.000Z",
          "author": "mollyh",
          "body": "Wow. I think this is great!",
          "article_id": 1
        }
      ]
    },
    "errors": {
      "400": "responds with an error if the article_id is invalid",
      "404": "responds with an error if the article does not exist"
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "adds a new comment to a specified article",
    "requestBody": {
      "username": "string",
      "body": "string"
    },
    "exampleResponse": {
      "comment": {
        "comment_id": 24,
        "article_id": 1,
        "body": "This post is so interesting...",
        "author": "comment_guy",
        "votes": 0,
        "created_at": "2024-26-11T13:04:08.000Z"
      }
    },
    "errors": {
      "400": [
        "returns an error if the request body is empty",
        "returns an error if the username is missing",
        "returns an error if comment body is missing",
        "returns an error if the article id is invalid"
      ],
      "404": [
        "returns an error if the article doesn't exist",
        "returns an error if the username doesn't exist"
      ]
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "updates an article's votes by the increment or decrement",
    "requestBody": {
      "inc_votes": "integer"
    },
    "exampleResponse": {
      "article": {
        "article_id": 1,
        "title": "Living in the shadow of a great man",
        "topic": "mitch",
        "author": "butter_bridge",
        "body": "I find this existence challenging",
        "created_at": "2018-05-30T15:59:13.341Z",
        "votes": 101,
        "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700"
      }
    },
    "errors": {
      "400": [
        "responds with an error if the request body is missing",
        "responds with an error if inc_votes is not a number"
      ],
      "404": "responds with an error if no article is found"
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes comment for given comment_id",
    "response": {
      "status": 204,
      "body": null
    },
    "errors": {
      "400": "responds with an error if the comment_id is invalid",
      "404": "responds with an error if no comment exists for given comment_id"
    }
  }
}
